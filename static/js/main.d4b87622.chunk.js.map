{"version":3,"sources":["Components/Layout.jsx","Components/Pages/DecksList/Deck.jsx","Components/Pages/DecksList/LoadingDeck.jsx","Components/Pages/DecksList/DecksList.jsx","Components/Pages/DecksList/index.js","Components/Pages/Error404/index.js","Components/Pages/Error404/Error404.jsx","Components/Pages/DeckDetail/Slide.jsx","Components/Pages/DeckDetail/LoadingSlide.jsx","Components/Pages/DeckDetail/Controls.jsx","Components/Pages/DeckDetail/DeckDetail.jsx","Components/Pages/DeckDetail/index.js","App.jsx","index.jsx"],"names":["useStyles","makeStyles","theme","offset","mixins","toolbar","feedback","marginLeft","createMuiTheme","Layout","children","classes","ThemeProvider","CssBaseline","AppBar","Toolbar","to","style","textDecoration","color","Typography","variant","component","href","process","className","IconButton","Feedback","responsiveFontSizes","root","minWidth","Deck","category","name","url","isArchived","onArchive","Card","CardActionArea","Link","CardContent","CardActions","Button","size","onClick","LoadingDeck","randomLengthName","useState","Array","Math","floor","random","map","join","Skeleton","decksList","paddingTop","spacing","deckWrapper","paddingBottom","archiveTitleWrapper","width","archiveTitle","padding","archiveTitleIcon","paddingLeft","marginTop","DecksList","allDecks","setAllDecks","activeDecks","setActiveDecks","useLocalStorage","archivedDecks","setArchivedDecks","hiddenDecks","setHiddenDecks","isArchiveCollapsed","setIsArchiveCollapsed","history","useHistory","useEffect","newHiddenDecksString","qs","parse","location","search","ignoreQueryPrefix","newDeck","newHiddenDecks","split","Set","push","pathname","oldDecks","isLoading","setIsLoading","fetch","then","res","text","result","fetchedDecks","slice","error","console","log","filter","deck","includes","Container","keys","key","sort","deckToArchive","length","ButtonBase","ExpandMore","ExpandLess","Collapse","in","timeout","deckToUnarchive","Error404","wrapper","maxWidth","overflowWrap","hyphens","card","mediaWrapper","media","loopButton","float","Slide","slideContent","deckUrl","onSlideFinished","isSlidePlaying","czechLabelShown","englishLabelShown","pauseDurationMultiplier","pauseDuration","useRef","englishText","czechText","audio","image","timesPlayed","setTimesPlayed","timesPlayedRef","isSlideRepeating","setIsSlideRepeating","isAudioPlaying","setIsAudioPlaying","isAudioPaused","setIsAudioPaused","timeoutRef","current","clearTimeout","Box","display","justifyContent","src","alt","ToggleButton","value","selected","onChange","Repeat","gutterBottom","playing","height","onEnded","setTimeout","onDuration","t","margin","box","slider","marginRight","Controls","isPlaying","onResumePauseClick","onSlide","maxSlide","onSlideChange","setCzechLabelShown","setEnglishLabelShown","setPauseDurationMultiplier","Paper","square","flexDirection","alignItems","Pause","PlayArrow","Slider","min","max","valueLabelDisplay","valueLabelFormat","x","FormGroup","row","FormControlLabel","control","Switch","checked","e","target","label","FormControl","InputLabel","id","Select","labelId","MenuItem","minHeight","shuffleArray","array","i","j","DeckDetail","useParams","deckContent","setDeckContent","setOnSlide","setIsPlaying","readRemoteFile","download","complete","results","newDeckContent","data","r","json","catch","deckProps","deckShuffle","shuffle","firstImage","Image","onload","Audio","wakelock","navigator","wakeLock","request","message","getWakelock","returnedWakelock","release","flex","m","_","slide","App","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4b87622.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Link } from 'react-router-dom';\nimport {\n  createMuiTheme, IconButton, responsiveFontSizes, ThemeProvider,\n} from '@material-ui/core';\nimport { Feedback } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  offset: theme.mixins.toolbar,\n  feedback: {\n    marginLeft: 'auto',\n  },\n}));\n\nlet theme = createMuiTheme();\ntheme = responsiveFontSizes(theme);\n\nexport default function Layout({ children }) {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar>\n        <Toolbar>\n          <Link to=\"/\" style={{ textDecoration: 'none', color: 'unset' }}>\n            <Typography variant=\"h6\" component=\"h1\">\n              Shadow loop\n            </Typography>\n          </Link>\n          <a\n            href={process.env.REACT_APP_FEEDBACK_URL}\n            style={{ textDecoration: 'none', color: 'unset' }}\n            className={classes.feedback}\n          >\n            <IconButton color=\"inherit\">\n              <Feedback />\n            </IconButton>\n          </a>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.offset} />\n      {children}\n    </ThemeProvider>\n  );\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { CardActionArea } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n});\n\nexport default function Deck({\n  category, name, url, isArchived, onArchive,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardActionArea component={Link} to={`decks/${url}`}>\n        <CardContent>\n          <Typography variant=\"overline\" color=\"textSecondary\">\n            {category}\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            {name}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"secondary\" component={Link} to={`decks/${url}`}>\n          Spustit\n        </Button>\n        <Button size=\"small\" color=\"secondary\" onClick={onArchive}>\n          {isArchived ? 'Vyjmout z archivu' : 'Archivovat'}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nDeck.propTypes = {\n  category: PropTypes.string.isRequired,\n  isArchived: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  onArchive: PropTypes.func.isRequired,\n  url: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Skeleton } from '@material-ui/lab';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n});\n\nexport default function LoadingDeck() {\n  const classes = useStyles();\n\n  const randomLengthName = useState([...Array(\n    Math.floor(\n      Math.random() * 11,\n    ) + 10,\n  )].map(() => ('a')).join(''));\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Skeleton>\n          <Typography variant=\"overline\" color=\"textSecondary\">\n            Základní balíček\n          </Typography>\n        </Skeleton>\n        <Skeleton>\n          <Typography variant=\"h5\" component=\"h2\">\n            {randomLengthName[0]}\n          </Typography>\n        </Skeleton>\n      </CardContent>\n      <CardActions>\n        <Skeleton>\n          <Button size=\"small\" color=\"secondary\">\n            Spustit\n          </Button>\n        </Skeleton>\n        <Skeleton>\n          <Button size=\"small\" color=\"secondary\">\n            Archivovat\n          </Button>\n        </Skeleton>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport {\n  ButtonBase, Collapse, Container, Typography,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport qs from 'qs';\nimport { useLocalStorage } from '@rehooks/local-storage';\nimport {\n  ExpandLess, ExpandMore,\n} from '@material-ui/icons';\nimport Deck from './Deck';\nimport LoadingDeck from './LoadingDeck';\n\nconst useStyles = makeStyles((theme) => ({\n  decksList: {\n    paddingTop: theme.spacing(2),\n  },\n  deckWrapper: {\n    paddingBottom: theme.spacing(2),\n  },\n  archiveTitleWrapper: {\n    width: '100%',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  archiveTitle: {\n    width: '100%',\n    padding: theme.spacing(1),\n  },\n  archiveTitleIcon: {\n    paddingLeft: theme.spacing(1),\n    marginTop: theme.spacing(1),\n  },\n}));\n\nexport default function DecksList() {\n  const classes = useStyles();\n\n  const [allDecks, setAllDecks] = useState([]);\n  const [activeDecks, setActiveDecks] = useState([]);\n  const [archivedDecks, setArchivedDecks] = useLocalStorage('archivedDecks', []);\n  const [hiddenDecks, setHiddenDecks] = useLocalStorage('hiddenDecks', []);\n\n  const [isArchiveCollapsed, setIsArchiveCollapsed] = useState(true);\n\n  const history = useHistory();\n  useEffect(() => {\n    const newHiddenDecksString = qs.parse(history.location.search, { ignoreQueryPrefix: true })\n      .newDeck;\n    if (!newHiddenDecksString) return;\n\n    const newHiddenDecks = newHiddenDecksString.split(',');\n    setHiddenDecks([...new Set([...hiddenDecks, ...newHiddenDecks])]);\n    history.push(history.location.pathname);\n  }, [hiddenDecks, history, setHiddenDecks]);\n\n  useEffect(() => {\n    setAllDecks((oldDecks) => [...new Set([...oldDecks, ...hiddenDecks])]);\n  }, [hiddenDecks]);\n\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_DECKS_BASE_URL}/decks.txt`)\n      .then((res) => res.text())\n      .then((result) => {\n        const fetchedDecks = result.split('\\n').slice(0, -1);\n        setAllDecks((oldDecks) => [...new Set([...oldDecks, ...fetchedDecks])]);\n        setIsLoading(false);\n      },\n      (error) => { console.log(error); });\n  }, []);\n\n  function archiveDeck(deckToArchive) {\n    setActiveDecks(activeDecks.filter((deck) => deck !== deckToArchive));\n    setArchivedDecks([...new Set([...archivedDecks, deckToArchive])]);\n  }\n\n  function unarchiveDeck(deckToUnarchive) {\n    setArchivedDecks(archivedDecks.filter((deck) => deck !== deckToUnarchive));\n    setActiveDecks([...new Set([...activeDecks, deckToUnarchive])]);\n  }\n\n  useEffect(() => {\n    setActiveDecks(allDecks.filter((deck) => !archivedDecks.includes(deck)));\n  }, [allDecks, archivedDecks]);\n\n  return (\n    <Container className={classes.decksList}>\n      {isLoading ? (\n        <>\n          {[...Array(4).keys()].map((key) => (\n            <div className={classes.deckWrapper} key={key}>\n              <LoadingDeck />\n            </div>\n          ))}\n        </>\n      ) : (\n        <>\n          {activeDecks.sort().map((deck) => (\n            <div className={classes.deckWrapper} key={deck}>\n              <Deck\n                category={deck.split('_')[0]}\n                name={deck.split('_')[1]}\n                url={deck}\n                isArchived={false}\n                onArchive={() => archiveDeck(deck)}\n              />\n            </div>\n          ))}\n          {archivedDecks.length !== 0 && (\n            <>\n              <div className={classes.archiveTitleWrapper}>\n                <ButtonBase\n                  className={classes.archiveTitle}\n                  onClick={() => setIsArchiveCollapsed(!isArchiveCollapsed)}\n                >\n                  <Typography\n                    variant=\"h5\"\n                    component=\"h2\"\n                  >\n                    Archivované balíčky\n                  </Typography>\n                  <div className={classes.archiveTitleIcon}>\n                    {isArchiveCollapsed ? (\n                      <ExpandMore />\n                    ) : (\n                      <ExpandLess />\n                    )}\n                  </div>\n                </ButtonBase>\n              </div>\n\n              <Collapse in={!isArchiveCollapsed} timeout=\"auto\">\n                {archivedDecks.sort().map((deck) => (\n                  <div className={classes.deckWrapper} key={deck}>\n                    <Deck\n                      category={deck.split('_')[0]}\n                      name={deck.split('_')[1]}\n                      url={deck}\n                      isArchived\n                      onArchive={() => unarchiveDeck(deck)}\n                    />\n                  </div>\n                ))}\n              </Collapse>\n            </>\n          )}\n        </>\n      )}\n    </Container>\n  );\n}\n","import DecksList from './DecksList';\n\nexport default DecksList;\n","import Error404 from './Error404';\n\nexport default Error404;\n","import React from 'react';\n\nexport default function Error404() {\n  return (\n    <>\n      Error 404 :(\n    </>\n  );\n}\n","/* eslint-disable react/jsx-no-bind */\nimport PropTypes, { string } from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport ReactPlayer from 'react-player';\nimport { ToggleButton } from '@material-ui/lab';\nimport { Repeat as RepeatIcon } from '@material-ui/icons';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    padding: theme.spacing(2),\n    maxWidth: '100vw',\n    overflowWrap: 'anywhere',\n    hyphens: 'auto',\n  },\n  card: {\n    width: 'fit-content',\n  },\n  mediaWrapper: {\n    width: '100%',\n  },\n  media: {\n    maxWidth: '100%',\n  },\n  loopButton: {\n    float: 'right',\n    paddingBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n  },\n}));\n\nexport default function Slide({\n  slideContent, deckUrl, onSlideFinished, isSlidePlaying, czechLabelShown, englishLabelShown,\n  pauseDurationMultiplier,\n}) {\n  const classes = useStyles();\n\n  const pauseDuration = useRef(2);\n\n  const [englishText, czechText, audio, image] = slideContent;\n\n  const [timesPlayed, setTimesPlayed] = useState(0);\n  const timesPlayedRef = useRef(timesPlayed);\n\n  const [isSlideRepeating, setIsSlideRepeating] = useState(false);\n\n  const [isAudioPlaying, setIsAudioPlaying] = useState(true);\n  const [isAudioPaused, setIsAudioPaused] = useState(false);\n\n  const timeoutRef = useRef(0);\n\n  useEffect(() => {\n    setTimesPlayed(0);\n    timesPlayedRef.current = 0;\n    setIsAudioPaused(false);\n    clearTimeout(timeoutRef.current);\n  }, [slideContent]);\n\n  useEffect(() => {\n    setIsAudioPlaying(isSlidePlaying && !isAudioPaused);\n  }, [isSlidePlaying, isAudioPaused]);\n\n  useEffect(() => {\n    if (isSlidePlaying && timesPlayedRef.current > 2 && !isSlideRepeating) {\n      onSlideFinished();\n    }\n  }, [isSlidePlaying, isSlideRepeating, onSlideFinished, timesPlayed]);\n\n  function onAudioFinished() {\n    setIsAudioPaused(true);\n    timeoutRef.current = setTimeout(() => {\n      timesPlayedRef.current += 1;\n      setTimesPlayed(timesPlayedRef.current);\n      setIsAudioPaused(false);\n    }, pauseDuration.current * 1000 * pauseDurationMultiplier);\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <Card className={classes.card}>\n        <Box className={classes.mediaWrapper} display=\"flex\" justifyContent=\"center\">\n          <img\n            className={classes.media}\n            src={`${process.env.REACT_APP_DECKS_BASE_URL}/${deckUrl}/${image}`}\n            alt={englishText}\n          />\n        </Box>\n        <CardContent>\n          <div className={classes.loopButton}>\n            <ToggleButton\n              value=\"repeat\"\n              selected={isSlideRepeating}\n              onChange={() => setIsSlideRepeating(!isSlideRepeating)}\n            >\n              <RepeatIcon />\n            </ToggleButton>\n          </div>\n          { (englishLabelShown || czechLabelShown) && (\n            <>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {englishLabelShown ? englishText : czechText}\n              </Typography>\n              { (englishLabelShown && czechLabelShown) && (\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {czechText}\n                </Typography>\n              )}\n            </>\n          )}\n        </CardContent>\n        <ReactPlayer\n          url={`${process.env.REACT_APP_DECKS_BASE_URL}/${deckUrl}/${audio}`}\n          playing={isAudioPlaying}\n          width={0}\n          height={0}\n          onEnded={onAudioFinished}\n          onDuration={(t) => {\n            pauseDuration.current = t;\n          }}\n        />\n      </Card>\n    </div>\n  );\n}\n\nSlide.propTypes = {\n  czechLabelShown: PropTypes.bool.isRequired,\n  deckUrl: PropTypes.string.isRequired,\n  englishLabelShown: PropTypes.bool.isRequired,\n  isSlidePlaying: PropTypes.bool.isRequired,\n  onSlideFinished: PropTypes.func.isRequired,\n  pauseDurationMultiplier: PropTypes.number.isRequired,\n  slideContent: PropTypes.arrayOf(string).isRequired,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Skeleton } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    padding: theme.spacing(2),\n    maxWidth: '100vw',\n  },\n  media: {\n    width: '500px',\n    paddingTop: '57%',\n  },\n}));\n\nexport default function Slide() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.wrapper}>\n      <Card>\n        <Skeleton variant=\"rect\">\n          <div className={classes.media} />\n        </Skeleton>\n        <CardContent>\n          <Skeleton>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              Lorem ipsum dolor sit amet\n            </Typography>\n          </Skeleton>\n          <Skeleton>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Lorem ipsum dolor\n            </Typography>\n          </Skeleton>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Box, Paper, IconButton, Slider, Container, FormControl, InputLabel, Select, MenuItem,\n} from '@material-ui/core';\nimport { Pause as PauseIcon, PlayArrow as PlayArrowIcon } from '@material-ui/icons';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  box: {\n    paddingTop: '20px',\n  },\n  slider: {\n    marginLeft: '15px',\n    marginRight: '15px',\n    marginTop: '10px',\n  },\n}));\n\nexport default function Controls({\n  isPlaying, onResumePauseClick, onSlide, maxSlide, onSlideChange,\n  czechLabelShown, setCzechLabelShown, englishLabelShown, setEnglishLabelShown,\n  pauseDurationMultiplier, setPauseDurationMultiplier,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Paper square className={classes.root}>\n      <Container>\n        <Box className={classes.box} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <Box display=\"flex\" width=\"100%\">\n            <IconButton onClick={onResumePauseClick}>\n              { isPlaying ? (\n                <PauseIcon />\n              ) : (\n                <PlayArrowIcon />\n              )}\n            </IconButton>\n            <Slider\n              className={classes.slider}\n              min={0}\n              max={maxSlide - 1}\n              value={onSlide}\n              onChange={onSlideChange}\n              valueLabelDisplay=\"on\"\n              valueLabelFormat={(x) => x + 1}\n            />\n          </Box>\n          <FormGroup row>\n            <FormControlLabel\n              control={(\n                <Switch\n                  checked={englishLabelShown}\n                  onChange={(e) => setEnglishLabelShown(e.target.checked)}\n                  color=\"primary\"\n                />\n              )}\n              label=\"Anglicky\"\n            />\n            <FormControlLabel\n              control={(\n                <Switch\n                  checked={czechLabelShown}\n                  onChange={(e) => setCzechLabelShown(e.target.checked)}\n                  color=\"primary\"\n                />\n              )}\n              label=\"Česky\"\n            />\n            <FormControl variant=\"outlined\">\n              <InputLabel id=\"pause-label\">Pauza</InputLabel>\n              <Select\n                labelId=\"pause-label\"\n                label=\"Pauza\"\n                value={pauseDurationMultiplier}\n                onChange={(e) => setPauseDurationMultiplier(e.target.value)}\n              >\n                <MenuItem value={1}>1×</MenuItem>\n                <MenuItem value={1.5}>1,5×</MenuItem>\n                <MenuItem value={2}>2×</MenuItem>\n              </Select>\n            </FormControl>\n          </FormGroup>\n        </Box>\n      </Container>\n    </Paper>\n  );\n}\n\nControls.propTypes = {\n  czechLabelShown: PropTypes.bool.isRequired,\n  englishLabelShown: PropTypes.bool.isRequired,\n  isPlaying: PropTypes.bool.isRequired,\n  maxSlide: PropTypes.number.isRequired,\n  onResumePauseClick: PropTypes.func.isRequired,\n  onSlide: PropTypes.number.isRequired,\n  onSlideChange: PropTypes.func.isRequired,\n  pauseDurationMultiplier: PropTypes.number.isRequired,\n  setCzechLabelShown: PropTypes.func.isRequired,\n  setEnglishLabelShown: PropTypes.func.isRequired,\n  setPauseDurationMultiplier: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { readRemoteFile } from 'react-papaparse';\nimport Box from '@material-ui/core/Box';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Slide from './Slide';\nimport LoadingSlide from './LoadingSlide';\nimport Controls from './Controls';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    '@media (min-width:0px) and (orientation: landscape)': {\n      minHeight: 'calc(100vh - 48px)',\n    },\n    '@media (min-width:600px)': {\n      minHeight: 'calc(100vh - 64px)',\n    },\n    minHeight: 'calc(100vh - 56px)',\n  },\n}));\n\nfunction shuffleArray(array) {\n  // eslint-disable-next-line no-plusplus\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    // eslint-disable-next-line no-param-reassign\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nexport default function DeckDetail() {\n  const classes = useStyles();\n\n  const { deck: deckUrl } = useParams();\n\n  const [deckContent, setDeckContent] = useState([]);\n  const [onSlide, setOnSlide] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [czechLabelShown, setCzechLabelShown] = useState(true);\n  const [englishLabelShown, setEnglishLabelShown] = useState(true);\n  const [pauseDurationMultiplier, setPauseDurationMultiplier] = useState(1.5);\n\n  useEffect(() => {\n    readRemoteFile(`${process.env.REACT_APP_DECKS_BASE_URL}/${deckUrl}/${deckUrl}.csv`, {\n      download: true,\n      complete: async (results) => {\n        const newDeckContent = results.data.slice(0, -1);\n        const deckProps = await fetch(`${process.env.REACT_APP_DECKS_BASE_URL}/${deckUrl}/props.json`)\n          .then((r) => r.json())\n          .catch(() => false);\n\n        let deckShuffle = true;\n        if (deckProps) {\n          if ('shuffle' in deckProps) {\n            deckShuffle = deckProps.shuffle;\n          }\n        }\n        if (deckShuffle) shuffleArray(newDeckContent);\n\n        setDeckContent(newDeckContent);\n\n        const firstImage = new Image();\n        firstImage.src = `${process.env.REACT_APP_DECKS_BASE_URL}/${deckUrl}/${newDeckContent[1][3]}`;\n        firstImage.onload = () => setIsLoading(false);\n      },\n    });\n  }, [deckUrl]);\n\n  useEffect(() => {\n    if (!isLoading) {\n      // preload next image and audio\n      if (onSlide + 1 < deckContent.length) {\n        (new Image()).src = `${process.env.REACT_APP_DECKS_BASE_URL}/${deckUrl}/${deckContent[onSlide + 1][3]}`;\n        (new Audio()).src = `${process.env.REACT_APP_DECKS_BASE_URL}/${deckUrl}/${deckContent[onSlide + 1][2]}`;\n      }\n    }\n  }, [deckContent, deckUrl, isLoading, onSlide]);\n\n  useEffect(() => {\n    let wakelock = null;\n    async function getWakelock() {\n      try {\n        return await navigator.wakeLock.request('screen');\n      } catch (err) {\n        // can't get wakelock for some reason, too bad!\n        console.log(`${err.name}, ${err.message}`);\n        return null;\n      }\n    }\n    getWakelock().then((returnedWakelock) => {\n      if (returnedWakelock) {\n        console.log('wakelock acquired');\n        wakelock = returnedWakelock;\n      } else console.log('could not acquire wakelock');\n    });\n    return function cleanup() {\n      if (wakelock) {\n        console.log('releasing wakelock');\n        wakelock.release();\n      }\n    };\n  }, []);\n\n  function nextSlide() {\n    if (onSlide + 1 < deckContent.length) {\n      setOnSlide(onSlide + 1);\n    } else {\n      setIsPlaying(false);\n    }\n  }\n\n  return (\n    <Box\n      className={classes.root}\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Box flex=\"1\">\n        <Box display=\"flex\">\n          <Box m=\"auto\">\n            {isLoading ? <LoadingSlide /> : (\n              <Slide\n                slideContent={deckContent[onSlide]}\n                deckUrl={deckUrl}\n                /* eslint-disable-next-line react/jsx-no-bind */\n                onSlideFinished={nextSlide}\n                isSlidePlaying={isPlaying}\n                czechLabelShown={czechLabelShown}\n                englishLabelShown={englishLabelShown}\n                pauseDurationMultiplier={pauseDurationMultiplier}\n              />\n            )}\n          </Box>\n        </Box>\n      </Box>\n      <Controls\n        isPlaying={isPlaying}\n        onResumePauseClick={() => setIsPlaying(!isPlaying)}\n        onSlide={isLoading ? 1 : onSlide}\n        maxSlide={isLoading ? 1 : deckContent.length}\n        onSlideChange={(_, slide) => setOnSlide(slide)}\n        czechLabelShown={czechLabelShown}\n        setCzechLabelShown={setCzechLabelShown}\n        englishLabelShown={englishLabelShown}\n        setEnglishLabelShown={setEnglishLabelShown}\n        pauseDurationMultiplier={pauseDurationMultiplier}\n        setPauseDurationMultiplier={setPauseDurationMultiplier}\n      />\n    </Box>\n  );\n}\n","import DeckDetail from './DeckDetail';\n\nexport default DeckDetail;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport Layout from './Components/Layout';\nimport DecksList from './Components/Pages/DecksList';\nimport Error404 from './Components/Pages/Error404';\nimport DeckDetail from './Components/Pages/DeckDetail';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\">\n            <DecksList />\n          </Route>\n          <Route exact path=\"/decks\">\n            <Redirect to=\"/\" />\n          </Route>\n          <Route exact path=\"/decks/:deck\">\n            <DeckDetail />\n          </Route>\n          <Route>\n            <Error404 />\n          </Route>\n        </Switch>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","import 'core-js/stable';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}